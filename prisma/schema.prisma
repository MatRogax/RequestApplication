// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL") 
}

model Customer {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  password    String   @db.VarChar(255)     
  address     String   @db.Text
  phone       String   @db.VarChar(20)
  date        String   @db.VarChar(10) 
  hour        String   @db.VarChar(8)
  carts       Cart[]   
  orders      Order[] 
}

model Product {
  id                String     @id @default(uuid()) @db.Uuid
  name              String     @db.VarChar(255)
  description       String     @db.Text
  price             Decimal    @db.Decimal(10, 2)
  stockQuantity     Int
  image             String     @db.Text
  categoryId        Int        @db.Integer
  createdAt         DateTime   @default(now())
  category          Category   @relation(fields: [categoryId], references: [id])
  cartItems         CartItem[]  
  orderItems        OrderItem[]
}

model Admin {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
}

model Category {
  id        Int       @id @default(autoincrement()) @db.Integer
  name      String    @db.VarChar(255)
  description String  @db.Text
  createdAt DateTime  @default(now())
  products  Product[] 
}

model Cart {
  id        String    @id @default(uuid()) @db.Uuid
  customerId String   @db.Uuid
  createdAt DateTime  @default(now())
  customer  Customer  @relation(fields: [customerId], references: [id])
  items     CartItem[] 
}

model CartItem {
  id        Int       @id @default(autoincrement()) @db.Integer
  cartId    String    @db.Uuid
  productId String    @db.Uuid
  quantity  Int
  price     Decimal   @db.Decimal(10, 2)
  cart      Cart      @relation(fields: [cartId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])
}

model Order {
  id        String    @id @default(uuid()) @db.Uuid
  customerId String   @db.Uuid
  total     Decimal   @db.Decimal(10, 2)
  status    String    @db.VarChar(50)
  createdAt DateTime  @default(now())
  customer  Customer  @relation(fields: [customerId], references: [id])
  items     OrderItem[] 
}

model OrderItem {
  id        Int       @id @default(autoincrement()) @db.Integer
  orderId   String    @db.Uuid
  productId String    @db.Uuid
  quantity  Int
  price     Decimal   @db.Decimal(10, 2)
  order     Order     @relation(fields: [orderId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])
}
